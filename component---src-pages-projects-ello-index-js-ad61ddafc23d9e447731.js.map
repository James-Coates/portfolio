{"version":3,"sources":["webpack:///./src/pages/projects/ello/index.js","webpack:///./src/components/project-half-scroll/index.js","webpack:///./src/images/projects/ello/jest.png","webpack:///./src/images/projects/ello/screen.png","webpack:///./src/images/projects/ello/testscenario.png"],"names":["testImagePath","require","jestImagePath","screenImagePath","index","project","_public_static_d_291930733_json__WEBPACK_IMPORTED_MODULE_0__","data","projectsJson","testImage","name","path","jestImage","screenImage","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_project_layout__WEBPACK_IMPORTED_MODULE_2__","_components_project_text_block__WEBPACK_IMPORTED_MODULE_3__","heading","_components_project_image_text__WEBPACK_IMPORTED_MODULE_6__","reverse","image","_components_project_half_scroll__WEBPACK_IMPORTED_MODULE_5__","ProjectHalfScroll","_ref","children","className","projectHalfScrollStyles","wrapper","container","text","scrollImage","src","alt","module","exports","__webpack_require__","p"],"mappings":"4KAUMA,EAAgBC,EAAQ,KACxBC,EAAgBD,EAAQ,KACxBE,EAAkBF,EAAQ,KA4FjBG,UA1FD,WACZ,IA2BMC,EA3BIC,EAAAC,KA2BWC,aACfC,EAAY,CAChBC,KAAM,gBACNC,KAAMX,GAEFY,EAAY,CAChBF,KAAM,eACNC,KAAMT,GAEFW,EAAc,CAClBH,KAAM,sBACNC,KAAMR,GAER,OACEW,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeZ,QAASA,GACtBS,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAkBC,QAAQ,YACxBL,EAAAC,EAAAC,cAAA,8LAMFF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAkBC,SAAO,EAACC,MAAOb,GAC/BK,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,kMAKAF,EAAAC,EAAAC,cAAA,wFAIFF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAkBE,MAAOV,GACvBE,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,uNAMFF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAkBC,QAAQ,cACxBL,EAAAC,EAAAC,cAAA,wKAKFF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAmBD,MAAOT,GACxBC,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,gWCnEOQ,IAnBW,SAAAC,GAAuB,IAArBH,EAAqBG,EAArBH,MAAOI,EAAcD,EAAdC,SACjC,OACEZ,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAwBC,SACtCf,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAwBE,WACtChB,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAwBG,MACrCL,GAEHZ,EAAAC,EAAAC,cAAA,OAAKW,UAAWC,IAAwBI,aACtClB,EAAAC,EAAAC,cAAA,OAAKiB,IAAKX,EAAMX,KAAMuB,IAAKZ,EAAMZ,gCCb3CyB,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"component---src-pages-projects-ello-index-js-ad61ddafc23d9e447731.js","sourcesContent":["import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport ProjectLayout from '../../../components/project-layout';\nimport ProjectTextBlock from '../../../components/project-text-block';\nimport ProjectImageBlock from '../../../components/project-image-block';\nimport ProjectHalfScroll from '../../../components/project-half-scroll';\nimport ProjectImageText from '../../../components/project-image-text';\n\nconst testImagePath = require('../../../images/projects/ello/testscenario.png');\nconst jestImagePath = require('../../../images/projects/ello/jest.png');\nconst screenImagePath = require('../../../images/projects/ello/screen.png');\n\nconst index = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      projectsJson(id: {eq: \"ello\"}) {\n        id\n        title\n        rubric\n        overview\n        created\n        tags\n        banner {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        scope\n        objective\n        solution\n        colorDark\n        tech\n        link\n        repo\n        mobileOnly\n      }\n    }\n  `);\n  const project = data.projectsJson;\n  const testImage = {\n    name: 'Test Scenario',\n    path: testImagePath,\n  }\n  const jestImage = {\n    name: 'Jest & React',\n    path: jestImagePath,\n  }\n  const screenImage = {\n    name: 'Ello Screen Preview',\n    path: screenImagePath,\n  }\n  return (\n    <ProjectLayout project={project}>\n      <ProjectTextBlock heading=\"Approach\">\n        <p>\n          A test-driven development approach was used throughout the project. Before putting\n          any functionality to code user stories were collated and several test scenarios\n          were created.\n        </p>\n      </ProjectTextBlock>\n      <ProjectImageText reverse image={testImage}>\n        <h3>Behaviour Driven Development</h3>\n        <p>\n          By focusing on the behaviour of a wider range of stakeholders test scenarios can be\n          created making it easy for both developers and non-developers to understand product\n          requirements.\n        </p>\n        <p>\n          Scenarios were written as succinct as possible using the ‘Gherkin’ syntax.\n        </p>\n      </ProjectImageText>\n      <ProjectImageText image={jestImage}>\n        <h3>Unit, Integration & End-to-end Testing</h3>\n        <p>\n        Testing during development was mainly carried out using Jest. This included unit and\n        integration testing. Once the majority of features were completed end-to-end testing\n        was carried out using cucumber.\n        </p>\n      </ProjectImageText>\n      <ProjectTextBlock heading=\"The Result\">\n        <p>\n          The app requires authorisation through Meetup to access events. Once this has been granted\n          the application fetches upcoming events to display to the user.\n        </p>\n      </ProjectTextBlock>\n      <ProjectHalfScroll image={screenImage}>\n        <h3>Upcoming Events Display</h3>\n        <p>\n          At the top of the screen, below the landing section the user can search for events by\n          city. Once a city is selected a list of events is displayed. Additionally at the top of\n          the screen the user can view the number of upcoming events over the next seven days.\n        </p>\n      </ProjectHalfScroll>\n    </ProjectLayout>\n  );\n};\n\nindex.propTypes = {\n};\n\nexport default index;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport projectHalfScrollStyles from './project-half-scroll-styles.module.scss';\n\nconst ProjectHalfScroll = ({image, children}) => {\n  return (\n    <div className={projectHalfScrollStyles.wrapper}>\n      <div className={projectHalfScrollStyles.container}>\n        <div className={projectHalfScrollStyles.text}>\n          {children}\n        </div>\n        <div className={projectHalfScrollStyles.scrollImage}>\n          <img src={image.path} alt={image.name} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nProjectHalfScroll.propTypes = {\n\n};\n\nexport default ProjectHalfScroll;\n","module.exports = __webpack_public_path__ + \"static/jest-ff9f8fd7edbf55eb9e7b0c1c72be66d4.png\";","module.exports = __webpack_public_path__ + \"static/screen-46d22ab38a4270b02b18847634dafa5c.png\";","module.exports = __webpack_public_path__ + \"static/testscenario-b84be8122c21523f30538ea3d55f1abd.png\";"],"sourceRoot":""}